var mysql = require('mysql');
var client = null;

function init(hostname,username,password){
	client = mysql.createConnection({
		host:hostname,
	  user:username,
	  password: password,
		insecureAuth: true
	});

	client.connect(function(err){
		if(err) throw err;
		console.log('connect server success!'+err)
	});
	client.query('USE uitest');
	createTable();
}

function addOne(){
	client.query(addOneNote('list','test task','http://item.taobao.com/item.htm?id=10361183984','http://uitest.taobao.net/case/42.js','qiyou','123456','this is a test',0,10,'2012-12-06 20:00:00'),function(err){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			throw err;
		}
		console.log("add one note success!"+err);
	});
}

function getDate(){
	var d = new Date();
	return "'" + d.getFullYear() + "-" + (d.getMonth()+1) + "-" + d.getDate() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds() + "'"; 
}

function getDeadline(){
	var d = new Date();
	var last = d.valueOf() + 1800000;
	var b = new Date(last);
	return "'" + b.getFullYear() + "-" + (b.getMonth()+1) + "-" + b.getDate() + " " + b.getHours() + ":" + b.getMinutes() + ":" + b.getSeconds() + "'"; 
}
function timeDiff(timeVal){
	var now = new Date();
	var last = new Date(timeVal);
	
}

function createDatabase(){
	client.query('CREATE DATABASE uitest', function(err) {
			if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
				 throw err;
			}
			console.log("create database success!"+err);
	});
}

function createTable(){
	client.query('CREATE TABLE list (id int(6) not null primary key auto_increment,task_name char(40) not null,task_target_uri char(100) not null,task_inject_uri char(100) not null,username char(20) not null,password char(20),task_result text(400),failed_specs int(4) default "0",total_specs int(4) default "0",last_time DATETIME not null)',function(err){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			throw err;
		}
		console.log("create table success!"+err);
	});
}

function findOne(table,id){
	client.query(findOneNote(table,id),function(err,result){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			throw err;
		}
		console.log("find one note success!"+err);
		console.log(result);
		return result;
	});
}

function findAll(table){
	client.query(findAllNote(table),function(err,result){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			throw err;
		}
		console.log(findByTime());
		console.log("find all note success!"+err);
		console.log(result);
		return result;
	});
}

function findLatestSpecs(){
	client.query(findByTime(),function(err,result){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			throw err;
		}
		console.log(result);
		return result;
	});
}

function updateOne(table,result,failed_specs,total_specs,id){
	client.query(updateOneNote(table,result,failed_specs,total_specs,id),function(err){
		if (err && err.number != mysql.ERROR_DB_CREATE_EXISTS) {
			throw err;
		}
		console.log("update one note success!"+err);
	});
}


function findByTime(){
	return "select * from list where last_time < "+getDeadline()+" and last_time > "+getDate();
}

function addOneNote(table,task_name, task_target_uri, task_inject_uri, username, password,task_result , failed_specs, total_specs, last_time){
	return 'insert into '+ table +' (task_name, task_target_uri, task_inject_uri, username, password,task_result , failed_specs, total_specs, last_time) values ("' + task_name + '", "' + task_target_uri + '", "' + task_inject_uri + '", "' + username + '", "' + password + '", "' + task_result + '", ' + failed_specs + ', '+ total_specs + ', "' + last_time +'")';
}

function findOneNote(table,id){
	return 'select * from ' + table + ' where id = '+id;
}

function findAllNote(table){
	return 'select * from ' + table;
}

function updateOneNote(table,result,failed_specs,total_specs,id){
	return 'update '+table+' set task_result = "'+result+'", failed_specs = '+failed_specs+', total_specs = '+total_specs+' where id = '+id;
}

function closeCon(){
	client.end();
}

exports.init = init;
exports.closeCon = closeCon;
exports.findAll = findAll;
exports.addOne = addOne;
exports.findLatestSpecs = findLatestSpecs;
